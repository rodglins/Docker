#Comandos comentados Docker:

#Executa o container
docker run --name meu-primeiro-container -p 80:80 -d nginx
docker images

#lista os containers
docker ps

#apaga o docker
docker rm meu-primeiro-container
#ou
docker rm 2b5b (4 primeiros digitos codigo do docker)

#força a parada do docker
docker rm -f 2b5b ()

#deletando a imagem
docker rmi nginx ()

##Instalar explorador de imagem
#https://github.com/wagoodman/dive
wget https://github.com/wagoodman/dive/releases/download/v0.9.2/dive_0.9.2_linux_amd64.deb
sudo apt install ./dive_0.9.2_linux_amd64.deb

# Docker RUN
# Comando utilizado para criar um container
docker run --name newcontainer hello-world
docker run --name hello -d busybox sleep 3600
docker run --name site -d -p 80:80 nginx

#Docker PS
#Lista os container em execução, para listar os que não estão precisamos colocar o parâmetro -a
docker ps -a

#Docker INFO
#Exibe um sumuário dos nossos container, como também especificações do nosso docker
docker info

#Docker EXEC
#Adiciona um processo a mais no container
#Vamos criar uma pasta dentro do container
docker exec hello mkdir teste

# Acessamos o container com o servico SH
docker exec -it hello sh

#Docker STOP, START
#Paramos nosso container
docker stop hello

#Iniciamos nosso container
docker start hello

#Docker LOGS
#coletamos o output do nosso container, ótimo para debugar uma aplicação
docker logs site

#Docker PULL
docker pull hello-world

#Docker COMMIT
docker commit --author="Rodrigo Aglinskas" --message="Imagem com commit" hello hello

#Docker TAG
#Preparando para docker hub
docker tag hello luistkd4/hello:1.0

#Trocando um nome de um repositorio
docker tag hello-world ola-mundo

#Docker LOGIN,LOGOUT
#Logar no repositório local, ou público. Por padrão logamos no Docker HUB
docker login <usuário>

#Docker PUSH
#Vamos versionar nosso repositório/imagem ao docker hub
docker push rodglins/hello:1.0

#Docker SEARCH
#Procura por uma imagem no repositório
docker search <consulta>

#Docker RM
#Remove um container previamente parado
docker rm newcontainer

#para remover um container em execução é nesessário o parâmetro -f
docker rm -f site

#Docker RMI
#Remove um repositório/imagem local, se algum container estiver parado que utiliza essa imagem deverá passar o parâmetro -f
docker rmi -f hello-world

#Docker EXPORT,IMPORT

#Exporta o container mergeando as suas camadas
docker export hello > export.tar

#Importa o arquivo gerado, criando uma imagem do container a partir dela
cat export.tar | docker import - hello-export:latest

#Docker SAVE,LOAD
#Exporta a imagem em um arquivo
docker save luistkd4/hello:1.0 > save.tar

#Importa o arquivo gerado
docker load < save.tar



container <-- busybox = hello --> hello


------------

Comandos testados:

sudo su
apt-get update
apt-get install docker.io
docker --help
docker run -it hello-world
docker --version
docker ps
docker run rello-world
docker commit --author="inskas" --message="Imagem com commit" hello hello
dive hello
dive busybox
container <-- busybox = hello
container <-- busybox = hello
docker tag hello 
docker push rodglins/hello
docker search hello
docker search nginx
docker
docker DigiteoComando --help
netstat -nltp
docker rmi -f nginx
docker rm site
docker rm -f site
docker run -d --name hels/hello:1.0 sleep 3600
docker run -d --name helns/hello:1.0 sleep 3600
docker exec hello2 ls
docker ps
docker run -d --name hello3 docker ps -a
docker export hello3 > export.tar
cat export.tar | docker import - hello-export
docker images
docker run -d --name hello4  hello-export sleep 3600
docker exec hello4 ls
docker save 
docker images
docker swarm join --token TOKEN IP:2377







-----


#principais comandos:

run,
ps;
images,
exec
stop, start
logs
inspect
pull
commit
tag
login, logout
push
search
rm
rmi
export, import
save, load


------------------


#Comandos:

Usage:  docker [OPTIONS] COMMAND

A self-sufficient runtime for containers

Options:
      --config string      Location of client config files (default "/root/.do
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket(s) to connect to
  -l, --log-level string   Set the logging level
                           ("debug"|"info"|"warn"|"error"|"fatal") (default "i
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default
                           "/root/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file (default
                           "/root/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default "/root/.docker/key.pe
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Management Commands:
  builder     Manage builds
  config      Manage Docker configs
  container   Manage containers
  engine      Manage the docker engine
  image       Manage images
  network     Manage networks
  node        Manage Swarm nodes
  plugin      Manage plugins
  secret      Manage Docker secrets
  service     Manage services
  stack       Manage Docker stacks
  swarm       Manage Swarm
  system      Manage Docker
  trust       Manage trust on Docker images
  volume      Manage volumes

Commands:
  attach      Attach local standard input, output, and error streams to a runner
  build       Build an image from a Dockerfile
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesys
  events      Get real time events from the server
  exec        Run a command in a running container
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  images      List images
  import      Import the contents from a tarball to create a filesystem image
  info        Display system-wide information
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  login       Log in to a Docker registry
  logout      Log out from a Docker registry
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  ps          List containers
  pull        Pull an image or a repository from a registry
  push        Push an image or a repository to a registry
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  run         Run a command in a new container
  save        Save one or more images to a tar archive (streamed to STDOUT by
  search      Search the Docker Hub for images
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  version     Show the Docker version information
  wait        Block until one or more containers stop, then print their exit c



